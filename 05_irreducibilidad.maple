# Algoritmo de Rabin para comprobar si un polinimio de Fq[x] es irreducible

# Los elementos de Fq los representamos como elementos de Zp(alpha), con alpha la raiz de un polinomio irreducible en Zp[x]
# Por lo tanto los elementos de Fq[x] los representamos como polinomios de Zp[alpha,x]

# Teorema: x^(q^d) - x es el producto de todos los polinomios monicos irreducibles de Fq[x] cuyo grado
# divide a d

# Conclusion: f polinomio monico de grado n es irreducible si y solo si f | x^(q^n)-x
# y gcd(x^(q^(n/t))-x,f) = 1 para todo t divisor primo de n

irreducible := proc (f, q, x)
  local a, t, n;
  n := degree(f, x);
  a := `mod`(Powmod(x, q^n, f, x), p);
  if a <> x then
    return false
  end if;
  for t from 2 to iquo(n, 2) do
    if isprime(t) and irem(n, t) = 0 then
      a := `mod`(Powmod(x, q^(n/t), f, x), p);
      if `mod`(Gcd(a-x, f), p) <> 1 then
        return false
      end if
    end if
  end do;
  return true;
end proc;

# Mejoras:
  # usar el modular composition algorithm para calcular x^(q^k) mod f


p := 281;

n := 4;

f := Randprime(n, x)  mod p;

alias(w = RootOf(f));

g := `mod`(Randpoly(5, x, w), p);

g := x^6+collect(g, [x]);

q := p^n;

irreducible(g, q, x);

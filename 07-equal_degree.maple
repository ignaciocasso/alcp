

############## A comprobar que funciona en maple, y a a√±adir el splitting para caracteristica 2, que no funciona con este algoritmo



# Sabiendo que f=f1*...*fm con fi polinomios monicos irreducibles del mismo grado d, la equal degree factorization
# calcula esos polinomios

# La tecnica usada para hacerlo es encontrar un divisor g de f y buscar recursivamente los factores
# irreducibles de g y de f/g

# Si g es un divisor no trivial de f, existen i y j,, g mod fi = 0, g mod fj != 0.

# Sea Ri = Fq[x]/<fi>, que es un cuerpo finito de orden k=q^d, y cuyas unidades Ri\{0} forman un grupo de orden k-1.
# La teoria de grupos nos dice que si hi pertence a Ri\{0}, hi^((k-1)/2) = 1 o -1 con la misma probabilidad
# Por lo tanto hi^((k-1)/2) - 1 sera 0 en Ri con probabilidad 1/2, o lo que es lo mismo, sera multiplo de fi con probabilidad 1/2
# (A no ser que la caracteristica sea 2, en cuyo caso 1-1 = -1-1 = 0 y sera 0 en Ri con probabilidad 1)

# Entonces, si cogemos h aleatorio en Fq[x], g = h^((k-1)/2) -1 mod f, gi = g mod fi sera 0 con probabilidad 1/2,
# y sera 0 para un i, y distinto de 0 para un j con probabilidad >= 1/2

equal_degree_factorization := proc(f,x,p,k,alpha,d)
  if degree(f,x)=d return {f};
  g := split(f,x,p,k,alpha,d);
  while g=0 do
    g := split(f,x,p,k,alpha,d);
  end do;
  return equal_degree_factorization(g) union equal_degree_factorization(f/g);
end proc;

#Algoritmo probabilista para separar f en dos divisores. Devuelve 0 si fracasa
split := proc(f,x,q,d)
  local m,h;
  m := rand(1..degree(f)-1); #Segun modern computer algebra. Segun geddes, grado 2n-1 directamente
  h := Randpoly(m,x,alpha) mod p;
  h := Powmod(h,(q^d-1)/2,f,x) mod p;
  h := h-1;
  mcd := Gcd(h,f) mod p;
  if mcd<>1 and mcd<>f then  #tal vez haya que expandir o normalizar antes de comparar
    return g;
  else
    return 0;
  end if;
end proc;


# Split no funciona para cuerpos de caracteristica 2, ya que
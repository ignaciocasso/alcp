

############## Sólo funciona para característica mayor que 2. Para característica 2 hace falta un split distinto



# Sabiendo que f=f1*...*fm con fi polinomios monicos irreducibles del mismo grado d, la equal degree factorization
# calcula esos polinomios

# La tecnica usada para hacerlo es encontrar un divisor g de f y buscar recursivamente los factores
# irreducibles de g y de f/g

# Si g es un divisor no trivial de f, existen i y j tq g mod fi = 0, g mod fj != 0.

# Sea Ri = Fq[x]/<fi>, que es un cuerpo finito de orden k=q^d, y cuyas unidades Ri\{0} forman un grupo de orden k-1.
# La teoria de grupos nos dice que si hi pertence a Ri\{0}, hi^((k-1)/2) = 1 o -1 con la misma probabilidad
# Por lo tanto hi^((k-1)/2) - 1 sera 0 en Ri con probabilidad 1/2, o lo que es lo mismo, sera multiplo de fi con probabilidad 1/2
# (A no ser que la caracteristica sea 2, en cuyo caso 1-1 = -1-1 = 0 y sera 0 en Ri con probabilidad 1)

# Entonces, si cogemos h aleatorio en Fq[x], g = h^((k-1)/2) -1 mod f, gi = g mod fi sera 0 con probabilidad 1/2,
# y sera 0 para un i, y distinto de 0 para un j con probabilidad >= 1/2. El mcd de g y f sera el divisor buscado

equal_degree_factorization := proc(f,x,q,alpha,d)
    local g1,g2;
    if degree(f,x)=0 then
        return {};
    end if;
    if degree(f,x)=d then
        return {f};
    end if;
    g1 := split(f,x,q,alpha,d);
    while g1=0 do
        g1 := split(f,x,q,alpha,d);
    end do;
    g2 := Quo(f,g1,x) mod p;
    return equal_degree_factorization(g1,x,q,alpha,d) union equal_degree_factorization(g2,x,q,alpha,d);
end proc;

#Algoritmo probabilista para separar f en dos divisores. Devuelve 0 si fracasa
split := proc(f,x,q,alpha,d)
    local m,h,mcd;
    m := rand(1..degree(f)-1); #Segun modern computer algebra. Segun geddes, grado 2n-1 directamente
    if alpha = 1 then
        h := Randpoly(m(),x) mod p;
    else
        h := Randpoly(m(),x,alpha) mod p;
    end;
    h := Powmod(h,(q^d-1)/2,f,x) mod p;
    h := h-1;
    mcd := Gcd(h,f) mod p;
    if mcd<>1 and mcd<>f then  # puede que la comparación directa entre f y g no funcione y que haya que expandir antes
        return mcd;
    else
        return 0;
    end if;
end proc;
